-- Utilizing organized table 'Emp_Info' from ReportDB Database to explore employees' information in various scenerios.
USE ReportDB;

-- 1. To count the total number of records in the table.

SELECT COUNT(*) AS total_records 
FROM ReportDB.Emp_Info;
-- __________________________________________________________________________________________________________________

-- 2.  To retrieve unique departments from a dept_name column.

SELECT DISTINCT dept_name 
FROM ReportDB.Emp_Info;
-- __________________________________________________________________________________________________________________

-- 3. To fetch records of employees' ID, Name, & Department whose names start with R and S.

SELECT emp_id, emp_name, dept_name
FROM ReportDB.Emp_Info
WHERE emp_name LIKE 'R%' OR emp_name LIKE 'S%'
ORDER BY emp_name; -- Using LIKE()
-- or
SELECT emp_id, emp_name, dept_name 
FROM ReportDB.Emp_Info
WHERE emp_name REGEXP "^R|^S"
ORDER BY emp_name; -- Using REGEXP()
-- __________________________________________________________________________________________________________________

-- 4. To calculate the total revenue of salary generated by each department.

SELECT dept_name, SUM(monthly_salary) as total_revenue 
FROM ReportDB.Emp_Info
GROUP BY dept_name;
-- __________________________________________________________________________________________________________________

-- 5. To fetch employees' ID, Name, & City who reside in Chennai.
 
SELECT emp_id, emp_name, city_name 
FROM ReportDB.Emp_Info
WHERE city_name = 'Chennai';
-- __________________________________________________________________________________________________________________

-- 6. To obtain Employees’ ID, Name, & Reward by sorting rewards in descending order within specific department.

SELECT emp_id, emp_name, rewards
FROM ReportDB.Emp_Info
WHERE dept_name = 'Full Stack Developer'
ORDER BY rewards DESC;
-- __________________________________________________________________________________________________________________

-- 7. To retrieve the 5 most recently hired employees’ ID, Name, & Hire Date.

SELECT emp_id, emp_name, hired_date
FROM ReportDB.Emp_Info
ORDER BY hired_date DESC
LIMIT 5;
-- __________________________________________________________________________________________________________________

-- 8. To retrieve employees' ID, Name, Department, & Reward who have more than 6 rewards.

SELECT emp_id, emp_name, dept_name, rewards
FROM ReportDB.Emp_Info
WHERE rewards > 6;
-- __________________________________________________________________________________________________________________

-- 9. To retrieve the total number of employees working in each department.

SELECT dept_name, COUNT(*) AS total_emps 
FROM ReportDB.Emp_Info
GROUP BY dept_name;
-- __________________________________________________________________________________________________________________

-- 10. To obtain the total number of employees residing in each city based on a specific department.

SELECT dept_name, city_name, COUNT(*) AS total_emps FROM ReportDB.Emp_Info
WHERE dept_name = 'Front-End Developer'
GROUP BY city_name;
-- __________________________________________________________________________________________________________________

-- 11. To count the total number of Male and Female working in each department.

SELECT 
	dept_name, 
	SUM(IF(gender = 'Male', 1, 0)) AS total_male, 
	SUM(IF(gender = 'Female', 1, 0)) AS total_female
FROM ReportDB.Emp_Info
GROUP BY dept_name;
-- __________________________________________________________________________________________________________________

-- 12. To retrieve employees' ID, Name, & Hire Date who were hired in the last quarter of the previous year.

SELECT emp_id, emp_name, hired_date
FROM ReportDB.Emp_Info
WHERE YEAR(hired_date) = 2023 AND QUARTER(hired_date) = 4; -- Using Quarter Function
-- or
SELECT emp_id, emp_name, hired_date
FROM ReportDB.Emp_Info
WHERE hired_date BETWEEN '2023-10-01' AND '2023-12-31'; -- Using Between Operator
-- __________________________________________________________________________________________________________________

-- 13. To retrieve the top 3 employees' ID, Name, Department, & Salary with the highest salaries.

SELECT emp_id, emp_name, dept_name, monthly_salary
FROM ReportDB.Emp_Info
ORDER BY monthly_salary DESC 
LIMIT 3;
-- __________________________________________________________________________________________________________________

-- 14. To retrieve employees' ID, Name, Department, & Salary who earn more than the average salary in a specific department.

SELECT a.emp_id, a.emp_name, a.dept_name, a.monthly_salary FROM ReportDB.Emp_Info a 
WHERE a.monthly_salary > (
	SELECT AVG(monthly_salary) AS avg_sal 
	FROM ReportDB.Emp_Info b
	GROUP BY dept_name 
	HAVING dept_name = 'Devops Engineer' 
		AND a.dept_name = b.dept_name
  );
-- __________________________________________________________________________________________________________________

-- 15. To retrieve employees' ID, Name, Department, & Salary who earn more than the average salary within their respective departments.

SELECT emp_id, emp_name, dept_name, monthly_salary
FROM ReportDB.Emp_Info a
WHERE monthly_salary > (
	SELECT AVG(monthly_salary) FROM ReportDB.Emp_Info b WHERE a.dept_name = b.dept_name
    ) 
ORDER BY dept_name; 
-- __________________________________________________________________________________________________________________

-- 16. To obtain the average salary of each department.

SELECT dept_name, ROUND(AVG(monthly_salary)) AS avg_sal FROM ReportDB.Emp_Info
GROUP BY dept_name ;
-- __________________________________________________________________________________________________________________

-- 17. To retrieve employees' ID, Name, Department, & Salary who have the maximum salary from each department.

SELECT emp_id, emp_name, dept_name, monthly_salary 
FROM ReportDB.Emp_Info a 
WHERE monthly_salary = (
	SELECT  MAX(monthly_salary) AS max_sal 
	FROM ReportDB.Emp_Info b
	GROUP BY dept_name HAVING a.dept_name = b.dept_name
	);
-- __________________________________________________________________________________________________________________

-- 18. To fetch employee’s ID, Name, Department, & Salary who has the highest salary in the table.

SELECT emp_id, emp_name, dept_name, monthly_salary  
FROM ReportDB.Emp_Info
WHERE monthly_salary = (
	SELECT MAX(monthly_salary) FROM ReportDB.Emp_Info
	);
-- __________________________________________________________________________________________________________________

-- 19. To retrieve employee's ID, Name, Department, & Salary who earn the second-highest salary in the table.

WITH CTE_1ST_MAX_SAL AS
		(SELECT MAX(monthly_salary) FROM ReportDB.Emp_Info),
	 CTE_2ND_MAX_SAL AS
		(SELECT MAX(monthly_salary) AS 2nd_max_sal 
		FROM ReportDB.Emp_Info 
        WHERE monthly_salary <> (SELECT * FROM CTE_1ST_MAX_SAL))
SELECT emp_id, emp_name, dept_name, monthly_salary
FROM ReportDB.Emp_Info 
WHERE monthly_salary = (SELECT * FROM CTE_2ND_MAX_SAL);
-- __________________________________________________________________________________________________________________

-- 20. To retrieve employee's ID, Name, Department, & Salary who earn the lowest salary in the table.

SELECT emp_id, emp_name, dept_name, monthly_salary
FROM ReportDB.Emp_Info
WHERE monthly_salary = (SELECT MIN(monthly_salary) AS min_sal FROM ReportDB.Emp_Info);
-- __________________________________________________________________________________________________________________

-- 21. To count number of employees falling under specific salary categories "Low Salary", "Average Salary", & "High Salary".
 
SELECT 
	'Low Salary' AS salary_category, SUM(IF(monthly_salary < 50000, 1, 0)) AS total_emps
FROM ReportDB.Emp_Info UNION
SELECT	
	'Average Salary' AS salary_category, SUM(IF(monthly_salary >= 50000 AND monthly_salary < 70000, 1, 0)) AS total_emps
FROM ReportDB.Emp_Info UNION
SELECT   
	'High Salary' AS salary_category, SUM(IF(monthly_salary >= 70000, 1, 0)) AS total_emps
FROM ReportDB.Emp_Info;
-- __________________________________________________________________________________________________________________

-- 22. To obtain employees' ID, Name, Department, & Salary according top 2 unique salary from each department using window function.

WITH ranked_employees AS
	(SELECT emp_id, emp_name, dept_name, monthly_salary, 
			DENSE_RANK() OVER(PARTITION BY dept_name ORDER BY monthly_salary DESC) AS salary_rank
	FROM ReportDB.Emp_Info)
SELECT emp_id, emp_name, dept_name, monthly_salary
FROM ranked_employees WHERE salary_rank <= 2;
-- ==================================================================================================================